@Library('my-share') _
pipeline {
    agent any
	environment {
		ymlFileSvnUrl = "http://1.119.142.186:82/svn/svndate/Test/自动化测试/测试脚本/20170714-jenkins配置ant/antxml/yml/xmgl"
		testYmlLocalPath = "${env.WORKSPACE}/yml/docker.yml"
		onlineYmlLocalPath = "${env.WORKSPACE}/yml/online.yml"
		iniFileSvnUrl = "http://1.119.142.186:82/svn/svndate/Test/自动化测试/jenkins/pipeline/ini/xmgl"
		iniLocalPath = "${env.WORKSPACE}/ini/xmgl.ini"
	}
	tools ('加载工具') {
		maven 'maven-3.6.2'
		jdk 'jdk-1.8'
	}
	parameters {
	  choice choices: ['test', 'online'], description: '选择本次部署的环境', name: 'environment'
	}
    stages {
		stage('优先获取ini配置文件'){
			steps {
				script {
					checkout_svn "${env.iniFileSvnUrl}","ini"
				}
			}
		}
		stage('checkout项目代码和配置文件'){
			failFast true
			parallel {
				stage('从SVN获取项目代码') {
					steps {
						script {
							def projmssvn= get_ini "svn.projms"
							checkout_svn "${projmssvn}","projms"
						}
					}
				}
				stage('从SVN获取部署所需配置文件'){
					steps {
						script {
							checkout_svn "${env.ymlFileSvnUrl}","yml"
						}
					}
				}
			}
		}

		stage('项目编译'){
			steps {
				script {
					compile.compileMaven "projms"
				}
			}
		}
		
		stage('替换配置文件'){
			steps {
				script {
					if("${environment}" == "test") {
						replacement_configuration "${env.testYmlLocalPath}","projms"
					} else {
						replacement_configuration "${env.onlineYmlLocalPath}","projms"
					}
				}
			}
		}
		
		stage('docker部署'){
			steps {
				script {
					docker_deploy.differentEnv "projms","${environment}"
				}
			}
		}
    }
}